{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class MainpageComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.registerForm = this.formBuilder.group({\n      username: ['', [Validators.required]],\n      password: ['', [Validators.required]],\n      firstname: ['', [Validators.required]],\n      lastname: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      phoneNumber: ['', [Validators.required, Validators.pattern(/^\\d{10}$/)]] // assuming 10-digit phone number\n    });\n  }\n\n  onSubmit() {\n    if (this.registerForm.valid) {\n      // Handle the form submission here\n      console.log(this.registerForm.value);\n    } else {\n      // Form is not valid, display an error message or take appropriate action\n    }\n  }\n  static #_ = this.ɵfac = function MainpageComponent_Factory(t) {\n    return new (t || MainpageComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MainpageComponent,\n    selectors: [[\"app-mainpage\"]],\n    decls: 22,\n    vars: 2,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"formControlName\", \"username\", \"required\", \"\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", \"required\", \"\"], [\"for\", \"firstname\"], [\"type\", \"text\", \"id\", \"firstname\", \"formControlName\", \"firstname\", \"required\", \"\"], [\"for\", \"lastname\"], [\"type\", \"text\", \"id\", \"lastname\", \"formControlName\", \"lastname\", \"required\", \"\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", \"required\", \"\"], [\"for\", \"phoneNumber\"], [\"type\", \"tel\", \"id\", \"phoneNumber\", \"formControlName\", \"phoneNumber\", \"required\", \"\"], [\"type\", \"submit\", 3, \"disabled\"]],\n    template: function MainpageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function MainpageComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(2, \"label\", 1);\n        i0.ɵɵtext(3, \"Username:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 2);\n        i0.ɵɵelementStart(5, \"label\", 3);\n        i0.ɵɵtext(6, \"Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 4);\n        i0.ɵɵelementStart(8, \"label\", 5);\n        i0.ɵɵtext(9, \"First Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 6);\n        i0.ɵɵelementStart(11, \"label\", 7);\n        i0.ɵɵtext(12, \"Last Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 8);\n        i0.ɵɵelementStart(14, \"label\", 9);\n        i0.ɵɵtext(15, \"Email:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 10);\n        i0.ɵɵelementStart(17, \"label\", 11);\n        i0.ɵɵtext(18, \"Phone Number:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 12);\n        i0.ɵɵelementStart(20, \"button\", 13);\n        i0.ɵɵtext(21, \"Submit\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n        i0.ɵɵadvance(19);\n        i0.ɵɵproperty(\"disabled\", !ctx.registerForm.valid);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","MainpageComponent","constructor","formBuilder","registerForm","group","username","required","password","firstname","lastname","email","phoneNumber","pattern","onSubmit","valid","console","log","value","_","i0","ɵɵdirectiveInject","i1","FormBuilder","_2","selectors","decls","vars","consts","template","MainpageComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","MainpageComponent_Template_form_ngSubmit_1_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\putth\\Desktop\\040613411\\Mini_Project\\Flight_Booking_Angular\\src\\app\\pages\\mainpage\\mainpage.component.ts","C:\\Users\\putth\\Desktop\\040613411\\Mini_Project\\Flight_Booking_Angular\\src\\app\\pages\\mainpage\\mainpage.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl , FormGroup , FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-mainpage',\n  templateUrl: './mainpage.component.html',\n  styleUrls: ['./mainpage.component.scss']\n})\nexport class MainpageComponent {\n  registerForm: FormGroup;\n\n  constructor(private formBuilder: FormBuilder) {\n    this.registerForm = this.formBuilder.group({\n      username: ['', [Validators.required]],\n      password: ['', [Validators.required]],\n      firstname: ['', [Validators.required]],\n      lastname: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      phoneNumber: ['', [Validators.required, Validators.pattern(/^\\d{10}$/)]] // assuming 10-digit phone number\n    });\n  }\n\n  onSubmit() {\n    if (this.registerForm.valid) {\n      // Handle the form submission here\n      console.log(this.registerForm.value);\n    } else {\n      // Form is not valid, display an error message or take appropriate action\n    }\n  }\n\n}\n","<div>\r\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n        <label for=\"username\">Username:</label>\r\n        <input type=\"text\" id=\"username\" formControlName=\"username\" required>\r\n      \r\n        <label for=\"password\">Password:</label>\r\n        <input type=\"password\" id=\"password\" formControlName=\"password\" required>\r\n      \r\n        <label for=\"firstname\">First Name:</label>\r\n        <input type=\"text\" id=\"firstname\" formControlName=\"firstname\" required>\r\n      \r\n        <label for=\"lastname\">Last Name:</label>\r\n        <input type=\"text\" id=\"lastname\" formControlName=\"lastname\" required>\r\n      \r\n        <label for=\"email\">Email:</label>\r\n        <input type=\"email\" id=\"email\" formControlName=\"email\" required>\r\n      \r\n        <label for=\"phoneNumber\">Phone Number:</label>\r\n        <input type=\"tel\" id=\"phoneNumber\" formControlName=\"phoneNumber\" required>\r\n      \r\n        <button type=\"submit\" [disabled]=\"!registerForm.valid\">Submit</button>\r\n      </form>\r\n</div>\r\n\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}