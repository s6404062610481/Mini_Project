{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport axios from 'axios';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class MainpageComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.data = '';\n    this.registerForm = this.formBuilder.group({\n      username: ['', [Validators.required]],\n      password: ['', [Validators.required]],\n      firstname: ['', [Validators.required]],\n      lastname: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      phoneNumber: ['', [Validators.required, Validators.pattern(/^\\d{10}$/)]] // assuming 10-digit phone number\n    });\n\n    this.loginForm = this.formBuilder.group({\n      username: ['', [Validators.required]],\n      password: ['', [Validators.required]]\n    });\n  }\n  // onSubmit() {\n  //   if (this.registerForm.valid) {\n  //     // Handle the form submission here\n  //     console.log(this.registerForm.value);\n  //   } else {\n  //     alert(\"registerForm invalid!!!\");\n  //   }\n  // }\n  // callApi(){\n  //   console.log(\"OK\");\n  //   try {\n  //     axios.get('https://dummyjson.com/products/1')\n  //     .then((response) => {\n  //       // Handle the successful response here\n  //       console.log(response.data);\n  //     })\n  //     .catch((error) => {\n  //       // Handle errors here\n  //       console.error(error);\n  //     });\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // }\n  callApi() {\n    if (this.registerForm.valid) {\n      const username = this.registerForm.get('username')?.value;\n      const password = this.registerForm.get('password').value;\n      const firstname = this.registerForm.get('firstname').value;\n      const lastname = this.registerForm.get('lastname').value;\n      const email = this.registerForm.get('email').value;\n      const phoneNumber = this.registerForm.get('phoneNumber').value;\n      const data = {\n        username: username,\n        password: password,\n        fname: firstname,\n        surname: lastname,\n        email: email,\n        phone: phoneNumber\n      };\n      // Make a POST request using Axios\n      axios.post('http://localhost:3333/register', data).then(response => {\n        // Handle the successful response here\n        console.log('POST request successful');\n        console.log(response.data);\n      }).catch(error => {\n        // Handle errors here\n        console.error('POST request failed', error);\n      });\n    }\n  }\n  static #_ = this.ɵfac = function MainpageComponent_Factory(t) {\n    return new (t || MainpageComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MainpageComponent,\n    selectors: [[\"app-mainpage\"]],\n    decls: 22,\n    vars: 1,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"formControlName\", \"username\", \"required\", \"\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", \"required\", \"\"], [\"for\", \"firstname\"], [\"type\", \"text\", \"id\", \"firstname\", \"formControlName\", \"firstname\", \"required\", \"\"], [\"for\", \"lastname\"], [\"type\", \"text\", \"id\", \"lastname\", \"formControlName\", \"lastname\", \"required\", \"\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", \"required\", \"\"], [\"for\", \"phoneNumber\"], [\"type\", \"tel\", \"id\", \"phoneNumber\", \"formControlName\", \"phoneNumber\", \"required\", \"\"], [\"type\", \"submit\"]],\n    template: function MainpageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function MainpageComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.callApi();\n        });\n        i0.ɵɵelementStart(2, \"label\", 1);\n        i0.ɵɵtext(3, \"Username:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 2);\n        i0.ɵɵelementStart(5, \"label\", 3);\n        i0.ɵɵtext(6, \"Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 4);\n        i0.ɵɵelementStart(8, \"label\", 5);\n        i0.ɵɵtext(9, \"First Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 6);\n        i0.ɵɵelementStart(11, \"label\", 7);\n        i0.ɵɵtext(12, \"Last Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 8);\n        i0.ɵɵelementStart(14, \"label\", 9);\n        i0.ɵɵtext(15, \"Email:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 10);\n        i0.ɵɵelementStart(17, \"label\", 11);\n        i0.ɵɵtext(18, \"Phone Number:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 12);\n        i0.ɵɵelementStart(20, \"button\", 13);\n        i0.ɵɵtext(21, \"Submit\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","axios","MainpageComponent","constructor","formBuilder","data","registerForm","group","username","required","password","firstname","lastname","email","phoneNumber","pattern","loginForm","callApi","valid","get","value","fname","surname","phone","post","then","response","console","log","catch","error","_","i0","ɵɵdirectiveInject","i1","FormBuilder","_2","selectors","decls","vars","consts","template","MainpageComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","MainpageComponent_Template_form_ngSubmit_1_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\putth\\Desktop\\040613411\\Mini_Project\\Flight_Booking_Angular\\src\\app\\pages\\mainpage\\mainpage.component.ts","C:\\Users\\putth\\Desktop\\040613411\\Mini_Project\\Flight_Booking_Angular\\src\\app\\pages\\mainpage\\mainpage.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport {\n  FormControl,\n  FormGroup,\n  FormBuilder,\n  Validators,\n} from '@angular/forms';\n\nimport axios from 'axios';\n\n@Component({\n  selector: 'app-mainpage',\n  templateUrl: './mainpage.component.html',\n  styleUrls: ['./mainpage.component.scss'],\n})\nexport class MainpageComponent {\n  registerForm!: FormGroup;\n  loginForm!: FormGroup;\n  data = '';\n  constructor(private formBuilder: FormBuilder) {\n    this.registerForm = this.formBuilder.group({\n      username: ['', [Validators.required]],\n      password: ['', [Validators.required]],\n      firstname: ['', [Validators.required]],\n      lastname: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      phoneNumber: ['', [Validators.required, Validators.pattern(/^\\d{10}$/)]], // assuming 10-digit phone number\n    });\n\n    this.loginForm = this.formBuilder.group({\n      username: ['', [Validators.required]],\n      password: ['', [Validators.required]],\n    });\n  }\n\n  // onSubmit() {\n  //   if (this.registerForm.valid) {\n  //     // Handle the form submission here\n  //     console.log(this.registerForm.value);\n  //   } else {\n  //     alert(\"registerForm invalid!!!\");\n  //   }\n\n  // }\n\n  // callApi(){\n  //   console.log(\"OK\");\n  //   try {\n\n  //     axios.get('https://dummyjson.com/products/1')\n  //     .then((response) => {\n  //       // Handle the successful response here\n  //       console.log(response.data);\n  //     })\n  //     .catch((error) => {\n  //       // Handle errors here\n  //       console.error(error);\n  //     });\n\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n\n  // }\n  callApi() {\n    if (this.registerForm.valid) {\n      const username = this.registerForm.get('username')?.value;\n      const password = this.registerForm.get('password').value;\n      const firstname = this.registerForm.get('firstname').value;\n      const lastname = this.registerForm.get('lastname').value;\n      const email = this.registerForm.get('email').value;\n      const phoneNumber = this.registerForm.get('phoneNumber').value;\n\n      const data = {\n        username: username,\n        password: password,\n        fname: firstname,\n        surname: lastname,\n        email: email,\n        phone: phoneNumber,\n      };\n\n      // Make a POST request using Axios\n      axios\n        .post('http://localhost:3333/register', data)\n        .then((response) => {\n          // Handle the successful response here\n          console.log('POST request successful');\n          console.log(response.data);\n        })\n        .catch((error) => {\n          // Handle errors here\n          console.error('POST request failed', error);\n        });\n    }\n  }\n}\n","<div>\r\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"callApi()\">\r\n        <label for=\"username\">Username:</label>\r\n        <input type=\"text\" id=\"username\" formControlName=\"username\" required>\r\n      \r\n        <label for=\"password\">Password:</label>\r\n        <input type=\"password\" id=\"password\" formControlName=\"password\" required>\r\n      \r\n        <label for=\"firstname\">First Name:</label>\r\n        <input type=\"text\" id=\"firstname\" formControlName=\"firstname\" required>\r\n      \r\n        <label for=\"lastname\">Last Name:</label>\r\n        <input type=\"text\" id=\"lastname\" formControlName=\"lastname\" required>\r\n      \r\n        <label for=\"email\">Email:</label>\r\n        <input type=\"email\" id=\"email\" formControlName=\"email\" required>\r\n      \r\n        <label for=\"phoneNumber\">Phone Number:</label>\r\n        <input type=\"tel\" id=\"phoneNumber\" formControlName=\"phoneNumber\" required>\r\n      \r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n\r\n      <!-- <button (click)=\"callApi()\">CallApi</button> -->\r\n\r\n</div>\r\n\r\n  "],"mappings":"AACA,SAIEA,UAAU,QACL,gBAAgB;AAEvB,OAAOC,KAAK,MAAM,OAAO;;;AAOzB,OAAM,MAAOC,iBAAiB;EAI5BC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAD/B,KAAAC,IAAI,GAAG,EAAE;IAEP,IAAI,CAACC,YAAY,GAAG,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC;MACzCC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACR,UAAU,CAACS,QAAQ,CAAC,CAAC;MACrCC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACV,UAAU,CAACS,QAAQ,CAAC,CAAC;MACrCE,SAAS,EAAE,CAAC,EAAE,EAAE,CAACX,UAAU,CAACS,QAAQ,CAAC,CAAC;MACtCG,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACZ,UAAU,CAACS,QAAQ,CAAC,CAAC;MACrCI,KAAK,EAAE,CAAC,EAAE,EAAE,CAACb,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACa,KAAK,CAAC,CAAC;MACpDC,WAAW,EAAE,CAAC,EAAE,EAAE,CAACd,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACe,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAE;KAC3E,CAAC;;IAEF,IAAI,CAACC,SAAS,GAAG,IAAI,CAACZ,WAAW,CAACG,KAAK,CAAC;MACtCC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACR,UAAU,CAACS,QAAQ,CAAC,CAAC;MACrCC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACV,UAAU,CAACS,QAAQ,CAAC;KACrC,CAAC;EACJ;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACAQ,OAAOA,CAAA;IACL,IAAI,IAAI,CAACX,YAAY,CAACY,KAAK,EAAE;MAC3B,MAAMV,QAAQ,GAAG,IAAI,CAACF,YAAY,CAACa,GAAG,CAAC,UAAU,CAAC,EAAEC,KAAK;MACzD,MAAMV,QAAQ,GAAG,IAAI,CAACJ,YAAY,CAACa,GAAG,CAAC,UAAU,CAAC,CAACC,KAAK;MACxD,MAAMT,SAAS,GAAG,IAAI,CAACL,YAAY,CAACa,GAAG,CAAC,WAAW,CAAC,CAACC,KAAK;MAC1D,MAAMR,QAAQ,GAAG,IAAI,CAACN,YAAY,CAACa,GAAG,CAAC,UAAU,CAAC,CAACC,KAAK;MACxD,MAAMP,KAAK,GAAG,IAAI,CAACP,YAAY,CAACa,GAAG,CAAC,OAAO,CAAC,CAACC,KAAK;MAClD,MAAMN,WAAW,GAAG,IAAI,CAACR,YAAY,CAACa,GAAG,CAAC,aAAa,CAAC,CAACC,KAAK;MAE9D,MAAMf,IAAI,GAAG;QACXG,QAAQ,EAAEA,QAAQ;QAClBE,QAAQ,EAAEA,QAAQ;QAClBW,KAAK,EAAEV,SAAS;QAChBW,OAAO,EAAEV,QAAQ;QACjBC,KAAK,EAAEA,KAAK;QACZU,KAAK,EAAET;OACR;MAED;MACAb,KAAK,CACFuB,IAAI,CAAC,gCAAgC,EAAEnB,IAAI,CAAC,CAC5CoB,IAAI,CAAEC,QAAQ,IAAI;QACjB;QACAC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;QACtCD,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACrB,IAAI,CAAC;MAC5B,CAAC,CAAC,CACDwB,KAAK,CAAEC,KAAK,IAAI;QACf;QACAH,OAAO,CAACG,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C,CAAC,CAAC;;EAER;EAAC,QAAAC,CAAA,G;qBAhFU7B,iBAAiB,EAAA8B,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAjBlC,iBAAiB;IAAAmC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCf9BX,EAAA,CAAAa,cAAA,UAAK;QACgCb,EAAA,CAAAc,UAAA,sBAAAC,oDAAA;UAAA,OAAYH,GAAA,CAAA3B,OAAA,EAAS;QAAA,EAAC;QACnDe,EAAA,CAAAa,cAAA,eAAsB;QAAAb,EAAA,CAAAgB,MAAA,gBAAS;QAAAhB,EAAA,CAAAiB,YAAA,EAAQ;QACvCjB,EAAA,CAAAkB,SAAA,eAAqE;QAErElB,EAAA,CAAAa,cAAA,eAAsB;QAAAb,EAAA,CAAAgB,MAAA,gBAAS;QAAAhB,EAAA,CAAAiB,YAAA,EAAQ;QACvCjB,EAAA,CAAAkB,SAAA,eAAyE;QAEzElB,EAAA,CAAAa,cAAA,eAAuB;QAAAb,EAAA,CAAAgB,MAAA,kBAAW;QAAAhB,EAAA,CAAAiB,YAAA,EAAQ;QAC1CjB,EAAA,CAAAkB,SAAA,gBAAuE;QAEvElB,EAAA,CAAAa,cAAA,gBAAsB;QAAAb,EAAA,CAAAgB,MAAA,kBAAU;QAAAhB,EAAA,CAAAiB,YAAA,EAAQ;QACxCjB,EAAA,CAAAkB,SAAA,gBAAqE;QAErElB,EAAA,CAAAa,cAAA,gBAAmB;QAAAb,EAAA,CAAAgB,MAAA,cAAM;QAAAhB,EAAA,CAAAiB,YAAA,EAAQ;QACjCjB,EAAA,CAAAkB,SAAA,iBAAgE;QAEhElB,EAAA,CAAAa,cAAA,iBAAyB;QAAAb,EAAA,CAAAgB,MAAA,qBAAa;QAAAhB,EAAA,CAAAiB,YAAA,EAAQ;QAC9CjB,EAAA,CAAAkB,SAAA,iBAA0E;QAE1ElB,EAAA,CAAAa,cAAA,kBAAsB;QAAAb,EAAA,CAAAgB,MAAA,cAAM;QAAAhB,EAAA,CAAAiB,YAAA,EAAS;;;QAnBnCjB,EAAA,CAAAmB,SAAA,GAA0B;QAA1BnB,EAAA,CAAAoB,UAAA,cAAAR,GAAA,CAAAtC,YAAA,CAA0B"},"metadata":{},"sourceType":"module","externalDependencies":[]}