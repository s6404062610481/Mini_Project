{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport axios from 'axios';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class MainpageComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.data = \"\";\n    this.registerForm = this.formBuilder.group({\n      username: ['', [Validators.required]],\n      password: ['', [Validators.required]],\n      firstname: ['', [Validators.required]],\n      lastname: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      phoneNumber: ['', [Validators.required, Validators.pattern(/^\\d{10}$/)]] // assuming 10-digit phone number\n    });\n\n    this.loginForm = this.formBuilder.group({\n      username: ['', [Validators.required]],\n      password: ['', [Validators.required]]\n    });\n  }\n  // onSubmit() {\n  //   if (this.registerForm.valid) {\n  //     // Handle the form submission here\n  //     console.log(this.registerForm.value);\n  //   } else {\n  //     alert(\"registerForm invalid!!!\");\n  //   }\n  // }\n  callApi() {\n    console.log(\"OK\");\n    try {\n      axios.get('https://dummyjson.com/products/1').then(response => {\n        // Handle the successful response here\n        console.log(response.data);\n        this.data;\n      }).catch(error => {\n        // Handle errors here\n        console.error(error);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  static #_ = this.ɵfac = function MainpageComponent_Factory(t) {\n    return new (t || MainpageComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MainpageComponent,\n    selectors: [[\"app-mainpage\"]],\n    decls: 3,\n    vars: 0,\n    consts: [[3, \"click\"]],\n    template: function MainpageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function MainpageComponent_Template_button_click_1_listener() {\n          return ctx.callApi();\n        });\n        i0.ɵɵtext(2, \"CallApi\");\n        i0.ɵɵelementEnd()();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","axios","MainpageComponent","constructor","formBuilder","data","registerForm","group","username","required","password","firstname","lastname","email","phoneNumber","pattern","loginForm","callApi","console","log","get","then","response","catch","error","_","i0","ɵɵdirectiveInject","i1","FormBuilder","_2","selectors","decls","vars","consts","template","MainpageComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","MainpageComponent_Template_button_click_1_listener","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\putth\\Desktop\\040613411\\Mini_Project\\Flight_Booking_Angular\\src\\app\\pages\\mainpage\\mainpage.component.ts","C:\\Users\\putth\\Desktop\\040613411\\Mini_Project\\Flight_Booking_Angular\\src\\app\\pages\\mainpage\\mainpage.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl , FormGroup , FormBuilder, Validators } from '@angular/forms';\n\nimport axios from 'axios';\n\n@Component({\n  selector: 'app-mainpage',\n  templateUrl: './mainpage.component.html',\n  styleUrls: ['./mainpage.component.scss']\n})\nexport class MainpageComponent {\n  registerForm!: FormGroup;\n  loginForm!: FormGroup;\n  data = \"\";\n  constructor(private formBuilder: FormBuilder) {\n    this.registerForm = this.formBuilder.group({\n      username: ['', [Validators.required]],\n      password: ['', [Validators.required]],\n      firstname: ['', [Validators.required]],\n      lastname: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      phoneNumber: ['', [Validators.required, Validators.pattern(/^\\d{10}$/)]] // assuming 10-digit phone number\n    });\n\n    this.loginForm = this.formBuilder.group({\n      username: ['', [Validators.required]],\n      password: ['', [Validators.required]],\n    })\n\n  }\n\n  // onSubmit() {\n  //   if (this.registerForm.valid) {\n  //     // Handle the form submission here\n  //     console.log(this.registerForm.value);\n  //   } else {\n  //     alert(\"registerForm invalid!!!\");\n  //   }\n\n  // }\n\n  callApi(){\n    console.log(\"OK\");\n    try {\n      \n      axios.get('https://dummyjson.com/products/1')\n      .then((response) => {\n        // Handle the successful response here\n        console.log(response.data);\n        this.data\n      })\n      .catch((error) => {\n        // Handle errors here\n        console.error(error);\n      });\n\n\n    } catch (error) {\n      console.log(error);\n    }\n\n  }\n\n}\n","<div>\r\n    <!-- <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n        <label for=\"username\">Username:</label>\r\n        <input type=\"text\" id=\"username\" formControlName=\"username\" required>\r\n      \r\n        <label for=\"password\">Password:</label>\r\n        <input type=\"password\" id=\"password\" formControlName=\"password\" required>\r\n      \r\n        <label for=\"firstname\">First Name:</label>\r\n        <input type=\"text\" id=\"firstname\" formControlName=\"firstname\" required>\r\n      \r\n        <label for=\"lastname\">Last Name:</label>\r\n        <input type=\"text\" id=\"lastname\" formControlName=\"lastname\" required>\r\n      \r\n        <label for=\"email\">Email:</label>\r\n        <input type=\"email\" id=\"email\" formControlName=\"email\" required>\r\n      \r\n        <label for=\"phoneNumber\">Phone Number:</label>\r\n        <input type=\"tel\" id=\"phoneNumber\" formControlName=\"phoneNumber\" required>\r\n      \r\n        <button type=\"submit\">Submit</button>\r\n      </form> -->\r\n\r\n      <button (click)=\"callApi()\">CallApi</button>\r\n\r\n</div>\r\n\r\n  "],"mappings":"AACA,SAAgDA,UAAU,QAAQ,gBAAgB;AAElF,OAAOC,KAAK,MAAM,OAAO;;;AAOzB,OAAM,MAAOC,iBAAiB;EAI5BC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAD/B,KAAAC,IAAI,GAAG,EAAE;IAEP,IAAI,CAACC,YAAY,GAAG,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC;MACzCC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACR,UAAU,CAACS,QAAQ,CAAC,CAAC;MACrCC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACV,UAAU,CAACS,QAAQ,CAAC,CAAC;MACrCE,SAAS,EAAE,CAAC,EAAE,EAAE,CAACX,UAAU,CAACS,QAAQ,CAAC,CAAC;MACtCG,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACZ,UAAU,CAACS,QAAQ,CAAC,CAAC;MACrCI,KAAK,EAAE,CAAC,EAAE,EAAE,CAACb,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACa,KAAK,CAAC,CAAC;MACpDC,WAAW,EAAE,CAAC,EAAE,EAAE,CAACd,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACe,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;KAC1E,CAAC;;IAEF,IAAI,CAACC,SAAS,GAAG,IAAI,CAACZ,WAAW,CAACG,KAAK,CAAC;MACtCC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACR,UAAU,CAACS,QAAQ,CAAC,CAAC;MACrCC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACV,UAAU,CAACS,QAAQ,CAAC;KACrC,CAAC;EAEJ;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EAEAQ,OAAOA,CAAA;IACLC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;IACjB,IAAI;MAEFlB,KAAK,CAACmB,GAAG,CAAC,kCAAkC,CAAC,CAC5CC,IAAI,CAAEC,QAAQ,IAAI;QACjB;QACAJ,OAAO,CAACC,GAAG,CAACG,QAAQ,CAACjB,IAAI,CAAC;QAC1B,IAAI,CAACA,IAAI;MACX,CAAC,CAAC,CACDkB,KAAK,CAAEC,KAAK,IAAI;QACf;QACAN,OAAO,CAACM,KAAK,CAACA,KAAK,CAAC;MACtB,CAAC,CAAC;KAGH,CAAC,OAAOA,KAAK,EAAE;MACdN,OAAO,CAACC,GAAG,CAACK,KAAK,CAAC;;EAGtB;EAAC,QAAAC,CAAA,G;qBAnDUvB,iBAAiB,EAAAwB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAjB5B,iBAAiB;IAAA6B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCV9BX,EAAA,CAAAa,cAAA,UAAK;QAuBSb,EAAA,CAAAc,UAAA,mBAAAC,mDAAA;UAAA,OAASH,GAAA,CAAArB,OAAA,EAAS;QAAA,EAAC;QAACS,EAAA,CAAAgB,MAAA,cAAO;QAAAhB,EAAA,CAAAiB,YAAA,EAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}